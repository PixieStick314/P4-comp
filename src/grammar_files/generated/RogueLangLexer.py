# Generated from C:/Users/Loke/PycharmProjects/P4-comp/src/grammar_files/RogueLang.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,49,327,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,1,
        0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,
        6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,
        9,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,
        1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,
        1,13,1,14,1,14,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,
        1,17,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,
        1,20,1,21,1,21,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,23,
        1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,
        1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,27,1,27,
        1,27,1,28,1,28,1,28,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,30,1,31,
        1,31,1,32,1,32,1,32,1,33,1,33,1,34,1,34,1,34,1,35,1,35,1,35,1,36,
        1,36,1,36,1,37,1,37,1,38,1,38,1,39,1,39,1,40,1,40,1,41,1,41,1,42,
        1,42,1,42,1,42,1,42,1,43,1,43,1,43,1,43,1,43,1,43,1,44,4,44,281,
        8,44,11,44,12,44,282,1,45,4,45,286,8,45,11,45,12,45,287,1,45,1,45,
        4,45,292,8,45,11,45,12,45,293,1,46,1,46,1,46,5,46,299,8,46,10,46,
        12,46,302,9,46,1,46,1,46,1,47,1,47,1,47,5,47,309,8,47,10,47,12,47,
        312,9,47,1,48,1,48,1,49,1,49,1,49,1,50,1,50,1,51,4,51,322,8,51,11,
        51,12,51,323,1,51,1,51,0,0,52,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,
        17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,
        39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,
        61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,
        83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,0,99,0,101,0,103,49,
        1,0,5,2,0,34,34,92,92,3,0,65,90,95,95,97,122,5,0,34,34,39,39,92,
        92,110,110,116,116,2,0,48,57,95,95,3,0,9,10,13,13,32,32,331,0,1,
        1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,
        0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,
        0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,
        0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,
        0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,
        0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,
        0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,
        0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,
        0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,
        0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,103,1,0,0,0,1,105,1,0,0,0,3,111,
        1,0,0,0,5,113,1,0,0,0,7,115,1,0,0,0,9,117,1,0,0,0,11,119,1,0,0,0,
        13,121,1,0,0,0,15,125,1,0,0,0,17,132,1,0,0,0,19,137,1,0,0,0,21,144,
        1,0,0,0,23,149,1,0,0,0,25,154,1,0,0,0,27,163,1,0,0,0,29,166,1,0,
        0,0,31,168,1,0,0,0,33,170,1,0,0,0,35,175,1,0,0,0,37,179,1,0,0,0,
        39,182,1,0,0,0,41,188,1,0,0,0,43,192,1,0,0,0,45,194,1,0,0,0,47,198,
        1,0,0,0,49,208,1,0,0,0,51,221,1,0,0,0,53,226,1,0,0,0,55,228,1,0,
        0,0,57,231,1,0,0,0,59,234,1,0,0,0,61,236,1,0,0,0,63,242,1,0,0,0,
        65,244,1,0,0,0,67,247,1,0,0,0,69,249,1,0,0,0,71,252,1,0,0,0,73,255,
        1,0,0,0,75,258,1,0,0,0,77,260,1,0,0,0,79,262,1,0,0,0,81,264,1,0,
        0,0,83,266,1,0,0,0,85,268,1,0,0,0,87,273,1,0,0,0,89,280,1,0,0,0,
        91,285,1,0,0,0,93,295,1,0,0,0,95,305,1,0,0,0,97,313,1,0,0,0,99,315,
        1,0,0,0,101,318,1,0,0,0,103,321,1,0,0,0,105,106,5,112,0,0,106,107,
        5,114,0,0,107,108,5,105,0,0,108,109,5,110,0,0,109,110,5,116,0,0,
        110,2,1,0,0,0,111,112,5,40,0,0,112,4,1,0,0,0,113,114,5,41,0,0,114,
        6,1,0,0,0,115,116,5,61,0,0,116,8,1,0,0,0,117,118,5,91,0,0,118,10,
        1,0,0,0,119,120,5,93,0,0,120,12,1,0,0,0,121,122,5,105,0,0,122,123,
        5,110,0,0,123,124,5,116,0,0,124,14,1,0,0,0,125,126,5,115,0,0,126,
        127,5,116,0,0,127,128,5,114,0,0,128,129,5,105,0,0,129,130,5,110,
        0,0,130,131,5,103,0,0,131,16,1,0,0,0,132,133,5,98,0,0,133,134,5,
        111,0,0,134,135,5,111,0,0,135,136,5,108,0,0,136,18,1,0,0,0,137,138,
        5,100,0,0,138,139,5,111,0,0,139,140,5,117,0,0,140,141,5,98,0,0,141,
        142,5,108,0,0,142,143,5,101,0,0,143,20,1,0,0,0,144,145,5,100,0,0,
        145,146,5,97,0,0,146,147,5,116,0,0,147,148,5,101,0,0,148,22,1,0,
        0,0,149,150,5,116,0,0,150,151,5,105,0,0,151,152,5,109,0,0,152,153,
        5,101,0,0,153,24,1,0,0,0,154,155,5,100,0,0,155,156,5,97,0,0,156,
        157,5,116,0,0,157,158,5,101,0,0,158,159,5,84,0,0,159,160,5,105,0,
        0,160,161,5,109,0,0,161,162,5,101,0,0,162,26,1,0,0,0,163,164,5,105,
        0,0,164,165,5,102,0,0,165,28,1,0,0,0,166,167,5,123,0,0,167,30,1,
        0,0,0,168,169,5,125,0,0,169,32,1,0,0,0,170,171,5,101,0,0,171,172,
        5,108,0,0,172,173,5,115,0,0,173,174,5,101,0,0,174,34,1,0,0,0,175,
        176,5,102,0,0,176,177,5,111,0,0,177,178,5,114,0,0,178,36,1,0,0,0,
        179,180,5,105,0,0,180,181,5,110,0,0,181,38,1,0,0,0,182,183,5,119,
        0,0,183,184,5,104,0,0,184,185,5,105,0,0,185,186,5,108,0,0,186,187,
        5,101,0,0,187,40,1,0,0,0,188,189,5,100,0,0,189,190,5,101,0,0,190,
        191,5,102,0,0,191,42,1,0,0,0,192,193,5,44,0,0,193,44,1,0,0,0,194,
        195,5,66,0,0,195,196,5,83,0,0,196,197,5,80,0,0,197,46,1,0,0,0,198,
        199,5,114,0,0,199,200,5,97,0,0,200,201,5,110,0,0,201,202,5,100,0,
        0,202,203,5,111,0,0,203,204,5,109,0,0,204,205,5,73,0,0,205,206,5,
        110,0,0,206,207,5,116,0,0,207,48,1,0,0,0,208,209,5,114,0,0,209,210,
        5,97,0,0,210,211,5,110,0,0,211,212,5,100,0,0,212,213,5,111,0,0,213,
        214,5,109,0,0,214,215,5,67,0,0,215,216,5,104,0,0,216,217,5,111,0,
        0,217,218,5,105,0,0,218,219,5,99,0,0,219,220,5,101,0,0,220,50,1,
        0,0,0,221,222,5,101,0,0,222,223,5,110,0,0,223,224,5,117,0,0,224,
        225,5,109,0,0,225,52,1,0,0,0,226,227,5,46,0,0,227,54,1,0,0,0,228,
        229,5,50,0,0,229,230,5,68,0,0,230,56,1,0,0,0,231,232,5,51,0,0,232,
        233,5,68,0,0,233,58,1,0,0,0,234,235,5,68,0,0,235,60,1,0,0,0,236,
        237,5,46,0,0,237,238,5,97,0,0,238,239,5,100,0,0,239,240,5,100,0,
        0,240,241,5,40,0,0,241,62,1,0,0,0,242,243,5,60,0,0,243,64,1,0,0,
        0,244,245,5,60,0,0,245,246,5,61,0,0,246,66,1,0,0,0,247,248,5,62,
        0,0,248,68,1,0,0,0,249,250,5,62,0,0,250,251,5,61,0,0,251,70,1,0,
        0,0,252,253,5,61,0,0,253,254,5,61,0,0,254,72,1,0,0,0,255,256,5,33,
        0,0,256,257,5,61,0,0,257,74,1,0,0,0,258,259,5,43,0,0,259,76,1,0,
        0,0,260,261,5,45,0,0,261,78,1,0,0,0,262,263,5,42,0,0,263,80,1,0,
        0,0,264,265,5,47,0,0,265,82,1,0,0,0,266,267,5,37,0,0,267,84,1,0,
        0,0,268,269,5,116,0,0,269,270,5,114,0,0,270,271,5,117,0,0,271,272,
        5,101,0,0,272,86,1,0,0,0,273,274,5,102,0,0,274,275,5,97,0,0,275,
        276,5,108,0,0,276,277,5,115,0,0,277,278,5,101,0,0,278,88,1,0,0,0,
        279,281,3,101,50,0,280,279,1,0,0,0,281,282,1,0,0,0,282,280,1,0,0,
        0,282,283,1,0,0,0,283,90,1,0,0,0,284,286,3,101,50,0,285,284,1,0,
        0,0,286,287,1,0,0,0,287,285,1,0,0,0,287,288,1,0,0,0,288,289,1,0,
        0,0,289,291,5,46,0,0,290,292,3,101,50,0,291,290,1,0,0,0,292,293,
        1,0,0,0,293,291,1,0,0,0,293,294,1,0,0,0,294,92,1,0,0,0,295,300,5,
        34,0,0,296,299,3,99,49,0,297,299,8,0,0,0,298,296,1,0,0,0,298,297,
        1,0,0,0,299,302,1,0,0,0,300,298,1,0,0,0,300,301,1,0,0,0,301,303,
        1,0,0,0,302,300,1,0,0,0,303,304,5,34,0,0,304,94,1,0,0,0,305,310,
        3,97,48,0,306,309,3,97,48,0,307,309,3,101,50,0,308,306,1,0,0,0,308,
        307,1,0,0,0,309,312,1,0,0,0,310,308,1,0,0,0,310,311,1,0,0,0,311,
        96,1,0,0,0,312,310,1,0,0,0,313,314,7,1,0,0,314,98,1,0,0,0,315,316,
        5,92,0,0,316,317,7,2,0,0,317,100,1,0,0,0,318,319,7,3,0,0,319,102,
        1,0,0,0,320,322,7,4,0,0,321,320,1,0,0,0,322,323,1,0,0,0,323,321,
        1,0,0,0,323,324,1,0,0,0,324,325,1,0,0,0,325,326,6,51,0,0,326,104,
        1,0,0,0,9,0,282,287,293,298,300,308,310,323,1,6,0,0
    ]

class RogueLangLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    PLUS = 38
    MINUS = 39
    MULT = 40
    DIV = 41
    MOD = 42
    TRUE = 43
    FALSE = 44
    INT = 45
    DOUBLE = 46
    STRING = 47
    ID = 48
    WS = 49

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'print'", "'('", "')'", "'='", "'['", "']'", "'int'", "'string'", 
            "'bool'", "'double'", "'date'", "'time'", "'dateTime'", "'if'", 
            "'{'", "'}'", "'else'", "'for'", "'in'", "'while'", "'def'", 
            "','", "'BSP'", "'randomInt'", "'randomChoice'", "'enum'", "'.'", 
            "'2D'", "'3D'", "'D'", "'.add('", "'<'", "'<='", "'>'", "'>='", 
            "'=='", "'!='", "'+'", "'-'", "'*'", "'/'", "'%'", "'true'", 
            "'false'" ]

    symbolicNames = [ "<INVALID>",
            "PLUS", "MINUS", "MULT", "DIV", "MOD", "TRUE", "FALSE", "INT", 
            "DOUBLE", "STRING", "ID", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "PLUS", "MINUS", 
                  "MULT", "DIV", "MOD", "TRUE", "FALSE", "INT", "DOUBLE", 
                  "STRING", "ID", "LETTER", "ESC", "NUMBER", "WS" ]

    grammarFileName = "RogueLang.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


