# Generated from C:/Users/lokes/PycharmProjects/P4-comp/src/grammar_files/RogueLang.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,56,388,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,4,1,
        4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,
        9,1,9,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,11,
        1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,
        1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,16,1,16,1,17,1,17,
        1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,
        1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,
        1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,25,1,25,
        1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,28,1,28,1,28,
        1,29,1,29,1,30,1,30,1,30,1,31,1,31,1,31,1,32,1,32,1,32,1,33,1,33,
        1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,34,
        1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,35,
        1,36,1,36,1,37,1,37,1,37,1,38,1,38,1,38,1,39,1,39,1,40,1,40,1,41,
        1,41,1,42,1,42,1,43,1,43,1,44,1,44,1,45,1,45,1,45,1,45,1,45,1,46,
        1,46,1,46,1,46,1,46,1,46,1,47,1,47,3,47,315,8,47,1,48,4,48,318,8,
        48,11,48,12,48,319,1,49,1,49,1,49,5,49,325,8,49,10,49,12,49,328,
        9,49,1,49,1,49,1,50,4,50,333,8,50,11,50,12,50,334,1,50,1,50,4,50,
        339,8,50,11,50,12,50,340,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,
        1,51,1,51,1,51,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,53,
        1,53,1,53,1,53,1,54,1,54,1,54,5,54,370,8,54,10,54,12,54,373,9,54,
        1,55,1,55,1,56,1,56,1,56,1,57,1,57,1,58,4,58,383,8,58,11,58,12,58,
        384,1,58,1,58,0,0,59,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,
        10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,
        21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,
        32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,
        43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,51,103,52,105,53,
        107,54,109,55,111,0,113,0,115,0,117,56,1,0,5,2,0,34,34,92,92,3,0,
        65,90,95,95,97,122,5,0,34,34,39,39,92,92,110,110,116,116,2,0,48,
        57,95,95,3,0,9,10,13,13,32,32,393,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,
        0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,
        0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,
        0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,
        0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,
        0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,
        0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,
        0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,
        0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,
        0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,
        0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,
        1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,117,1,0,0,0,1,119,1,0,0,0,
        3,125,1,0,0,0,5,127,1,0,0,0,7,129,1,0,0,0,9,131,1,0,0,0,11,135,1,
        0,0,0,13,137,1,0,0,0,15,139,1,0,0,0,17,141,1,0,0,0,19,145,1,0,0,
        0,21,152,1,0,0,0,23,157,1,0,0,0,25,164,1,0,0,0,27,169,1,0,0,0,29,
        174,1,0,0,0,31,183,1,0,0,0,33,186,1,0,0,0,35,188,1,0,0,0,37,190,
        1,0,0,0,39,195,1,0,0,0,41,199,1,0,0,0,43,207,1,0,0,0,45,210,1,0,
        0,0,47,216,1,0,0,0,49,225,1,0,0,0,51,227,1,0,0,0,53,231,1,0,0,0,
        55,237,1,0,0,0,57,239,1,0,0,0,59,242,1,0,0,0,61,244,1,0,0,0,63,247,
        1,0,0,0,65,250,1,0,0,0,67,253,1,0,0,0,69,263,1,0,0,0,71,276,1,0,
        0,0,73,281,1,0,0,0,75,283,1,0,0,0,77,286,1,0,0,0,79,289,1,0,0,0,
        81,291,1,0,0,0,83,293,1,0,0,0,85,295,1,0,0,0,87,297,1,0,0,0,89,299,
        1,0,0,0,91,301,1,0,0,0,93,306,1,0,0,0,95,314,1,0,0,0,97,317,1,0,
        0,0,99,321,1,0,0,0,101,332,1,0,0,0,103,342,1,0,0,0,105,353,1,0,0,
        0,107,362,1,0,0,0,109,366,1,0,0,0,111,374,1,0,0,0,113,376,1,0,0,
        0,115,379,1,0,0,0,117,382,1,0,0,0,119,120,5,112,0,0,120,121,5,114,
        0,0,121,122,5,105,0,0,122,123,5,110,0,0,123,124,5,116,0,0,124,2,
        1,0,0,0,125,126,5,40,0,0,126,4,1,0,0,0,127,128,5,41,0,0,128,6,1,
        0,0,0,129,130,5,59,0,0,130,8,1,0,0,0,131,132,5,118,0,0,132,133,5,
        97,0,0,133,134,5,114,0,0,134,10,1,0,0,0,135,136,5,61,0,0,136,12,
        1,0,0,0,137,138,5,91,0,0,138,14,1,0,0,0,139,140,5,93,0,0,140,16,
        1,0,0,0,141,142,5,105,0,0,142,143,5,110,0,0,143,144,5,116,0,0,144,
        18,1,0,0,0,145,146,5,115,0,0,146,147,5,116,0,0,147,148,5,114,0,0,
        148,149,5,105,0,0,149,150,5,110,0,0,150,151,5,103,0,0,151,20,1,0,
        0,0,152,153,5,98,0,0,153,154,5,111,0,0,154,155,5,111,0,0,155,156,
        5,108,0,0,156,22,1,0,0,0,157,158,5,100,0,0,158,159,5,111,0,0,159,
        160,5,117,0,0,160,161,5,98,0,0,161,162,5,108,0,0,162,163,5,101,0,
        0,163,24,1,0,0,0,164,165,5,100,0,0,165,166,5,97,0,0,166,167,5,116,
        0,0,167,168,5,101,0,0,168,26,1,0,0,0,169,170,5,116,0,0,170,171,5,
        105,0,0,171,172,5,109,0,0,172,173,5,101,0,0,173,28,1,0,0,0,174,175,
        5,100,0,0,175,176,5,97,0,0,176,177,5,116,0,0,177,178,5,101,0,0,178,
        179,5,84,0,0,179,180,5,105,0,0,180,181,5,109,0,0,181,182,5,101,0,
        0,182,30,1,0,0,0,183,184,5,105,0,0,184,185,5,102,0,0,185,32,1,0,
        0,0,186,187,5,123,0,0,187,34,1,0,0,0,188,189,5,125,0,0,189,36,1,
        0,0,0,190,191,5,101,0,0,191,192,5,108,0,0,192,193,5,115,0,0,193,
        194,5,101,0,0,194,38,1,0,0,0,195,196,5,102,0,0,196,197,5,111,0,0,
        197,198,5,114,0,0,198,40,1,0,0,0,199,200,5,102,0,0,200,201,5,111,
        0,0,201,202,5,114,0,0,202,203,5,101,0,0,203,204,5,97,0,0,204,205,
        5,99,0,0,205,206,5,104,0,0,206,42,1,0,0,0,207,208,5,105,0,0,208,
        209,5,110,0,0,209,44,1,0,0,0,210,211,5,119,0,0,211,212,5,104,0,0,
        212,213,5,105,0,0,213,214,5,108,0,0,214,215,5,101,0,0,215,46,1,0,
        0,0,216,217,5,102,0,0,217,218,5,117,0,0,218,219,5,110,0,0,219,220,
        5,99,0,0,220,221,5,116,0,0,221,222,5,105,0,0,222,223,5,111,0,0,223,
        224,5,110,0,0,224,48,1,0,0,0,225,226,5,44,0,0,226,50,1,0,0,0,227,
        228,5,66,0,0,228,229,5,83,0,0,229,230,5,80,0,0,230,52,1,0,0,0,231,
        232,5,46,0,0,232,233,5,97,0,0,233,234,5,100,0,0,234,235,5,100,0,
        0,235,236,5,40,0,0,236,54,1,0,0,0,237,238,5,60,0,0,238,56,1,0,0,
        0,239,240,5,60,0,0,240,241,5,61,0,0,241,58,1,0,0,0,242,243,5,62,
        0,0,243,60,1,0,0,0,244,245,5,62,0,0,245,246,5,61,0,0,246,62,1,0,
        0,0,247,248,5,61,0,0,248,249,5,61,0,0,249,64,1,0,0,0,250,251,5,33,
        0,0,251,252,5,61,0,0,252,66,1,0,0,0,253,254,5,114,0,0,254,255,5,
        97,0,0,255,256,5,110,0,0,256,257,5,100,0,0,257,258,5,111,0,0,258,
        259,5,109,0,0,259,260,5,73,0,0,260,261,5,110,0,0,261,262,5,116,0,
        0,262,68,1,0,0,0,263,264,5,114,0,0,264,265,5,97,0,0,265,266,5,110,
        0,0,266,267,5,100,0,0,267,268,5,111,0,0,268,269,5,109,0,0,269,270,
        5,67,0,0,270,271,5,104,0,0,271,272,5,111,0,0,272,273,5,105,0,0,273,
        274,5,99,0,0,274,275,5,101,0,0,275,70,1,0,0,0,276,277,5,101,0,0,
        277,278,5,110,0,0,278,279,5,117,0,0,279,280,5,109,0,0,280,72,1,0,
        0,0,281,282,5,46,0,0,282,74,1,0,0,0,283,284,5,50,0,0,284,285,5,68,
        0,0,285,76,1,0,0,0,286,287,5,51,0,0,287,288,5,68,0,0,288,78,1,0,
        0,0,289,290,5,68,0,0,290,80,1,0,0,0,291,292,5,43,0,0,292,82,1,0,
        0,0,293,294,5,45,0,0,294,84,1,0,0,0,295,296,5,42,0,0,296,86,1,0,
        0,0,297,298,5,47,0,0,298,88,1,0,0,0,299,300,5,37,0,0,300,90,1,0,
        0,0,301,302,5,116,0,0,302,303,5,114,0,0,303,304,5,117,0,0,304,305,
        5,101,0,0,305,92,1,0,0,0,306,307,5,102,0,0,307,308,5,97,0,0,308,
        309,5,108,0,0,309,310,5,115,0,0,310,311,5,101,0,0,311,94,1,0,0,0,
        312,315,3,91,45,0,313,315,3,93,46,0,314,312,1,0,0,0,314,313,1,0,
        0,0,315,96,1,0,0,0,316,318,3,115,57,0,317,316,1,0,0,0,318,319,1,
        0,0,0,319,317,1,0,0,0,319,320,1,0,0,0,320,98,1,0,0,0,321,326,5,34,
        0,0,322,325,3,113,56,0,323,325,8,0,0,0,324,322,1,0,0,0,324,323,1,
        0,0,0,325,328,1,0,0,0,326,324,1,0,0,0,326,327,1,0,0,0,327,329,1,
        0,0,0,328,326,1,0,0,0,329,330,5,34,0,0,330,100,1,0,0,0,331,333,3,
        115,57,0,332,331,1,0,0,0,333,334,1,0,0,0,334,332,1,0,0,0,334,335,
        1,0,0,0,335,336,1,0,0,0,336,338,5,46,0,0,337,339,3,115,57,0,338,
        337,1,0,0,0,339,340,1,0,0,0,340,338,1,0,0,0,340,341,1,0,0,0,341,
        102,1,0,0,0,342,343,3,115,57,0,343,344,3,115,57,0,344,345,3,115,
        57,0,345,346,3,115,57,0,346,347,5,45,0,0,347,348,3,115,57,0,348,
        349,3,115,57,0,349,350,5,45,0,0,350,351,3,115,57,0,351,352,3,115,
        57,0,352,104,1,0,0,0,353,354,3,115,57,0,354,355,3,115,57,0,355,356,
        5,58,0,0,356,357,3,115,57,0,357,358,3,115,57,0,358,359,5,58,0,0,
        359,360,3,115,57,0,360,361,3,115,57,0,361,106,1,0,0,0,362,363,3,
        103,51,0,363,364,5,44,0,0,364,365,3,105,52,0,365,108,1,0,0,0,366,
        371,3,111,55,0,367,370,3,111,55,0,368,370,3,115,57,0,369,367,1,0,
        0,0,369,368,1,0,0,0,370,373,1,0,0,0,371,369,1,0,0,0,371,372,1,0,
        0,0,372,110,1,0,0,0,373,371,1,0,0,0,374,375,7,1,0,0,375,112,1,0,
        0,0,376,377,5,92,0,0,377,378,7,2,0,0,378,114,1,0,0,0,379,380,7,3,
        0,0,380,116,1,0,0,0,381,383,7,4,0,0,382,381,1,0,0,0,383,384,1,0,
        0,0,384,382,1,0,0,0,384,385,1,0,0,0,385,386,1,0,0,0,386,387,6,58,
        0,0,387,118,1,0,0,0,10,0,314,319,324,326,334,340,369,371,384,1,6,
        0,0
    ]

class RogueLangLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    PLUS = 41
    MINUS = 42
    MULT = 43
    DIV = 44
    MOD = 45
    TRUE = 46
    FALSE = 47
    BOOL = 48
    INT = 49
    STRING = 50
    DOUBLE = 51
    DATE = 52
    TIME = 53
    DATETIME = 54
    ID = 55
    WS = 56

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'print'", "'('", "')'", "';'", "'var'", "'='", "'['", "']'", 
            "'int'", "'string'", "'bool'", "'double'", "'date'", "'time'", 
            "'dateTime'", "'if'", "'{'", "'}'", "'else'", "'for'", "'foreach'", 
            "'in'", "'while'", "'function'", "','", "'BSP'", "'.add('", 
            "'<'", "'<='", "'>'", "'>='", "'=='", "'!='", "'randomInt'", 
            "'randomChoice'", "'enum'", "'.'", "'2D'", "'3D'", "'D'", "'+'", 
            "'-'", "'*'", "'/'", "'%'", "'true'", "'false'" ]

    symbolicNames = [ "<INVALID>",
            "PLUS", "MINUS", "MULT", "DIV", "MOD", "TRUE", "FALSE", "BOOL", 
            "INT", "STRING", "DOUBLE", "DATE", "TIME", "DATETIME", "ID", 
            "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "PLUS", "MINUS", "MULT", "DIV", "MOD", 
                  "TRUE", "FALSE", "BOOL", "INT", "STRING", "DOUBLE", "DATE", 
                  "TIME", "DATETIME", "ID", "LETTER", "ESC", "NUMBER", "WS" ]

    grammarFileName = "RogueLang.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


